AWSTemplateFormatVersion: 2010-09-09
Description: Stack containing all the core components of the streaming pipeline, the Stream and the consumers

Parameters:
  ProjectName:
    Type: String
    Default: streaming-pipeline
  Stage:
    Type: String
    Default: dev

  S3KeyWriteToS3Consumer:
    Type: String
    Default: consumers/init.zip

Resources:
  IngressStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub "${ProjectName}-${Stage}-ingress-stream"
      RetentionPeriodHours: 48
      ShardCount: 2
      Tags:
      - Key: environment
        Value: !Ref Stage

  WriteToS3ConsumerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - kinesis:*
            Resource:
              - Fn::Join:
                - ""
                - - "arn:aws:kinesis:"
                  - Ref: "AWS::Region"
                  - ":"
                  - Ref: "AWS::AccountId"
                  - ":stream/"
                  - Ref: "IngressStream"
#          - Effect: Allow
#            Action:
#            - s3:Get*
#            - s3:List*
#            - s3:Put*
#            Resource:
#              - Fn::ImportValue: !Sub "data-sources-${Stage}:OutputBucketARN"
#              - Fn::ImportValue: !Sub "data-sources-${Stage}:OutputBucketAllKeysARN"

  WriteToS3Consumer:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${ProjectName}-write-to-s3-${Stage}"
      Handler: lambda_function.lambda_handler
      Description: Kinesis consumer to write events to S3
      Role: !GetAtt WriteToS3ConsumerExecutionRole.Arn
      Runtime: python3.6
      MemorySize: 128
      Timeout: 30
      Code:
        S3Bucket:
          Fn::ImportValue: !Sub "data-sources-${Stage}:DeploymentBucket"
        S3Key: !Ref S3KeyWriteToS3Consumer
      Tags:
      - Key: context
        Value: consumer
      - Key: stage
        Value: !Ref Stage

  WriteToS3ConsumerTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Fn::Join:
        - ""
        - - "arn:aws:kinesis:"
          - Ref: "AWS::Region"
          - ":"
          - Ref: "AWS::AccountId"
          - ":stream/"
          - Ref: "IngressStream"
      FunctionName:
        Fn::GetAtt:
        - "WriteToS3Consumer"
        - "Arn"
      Enabled: true
      BatchSize: 1000
      StartingPosition: LATEST
